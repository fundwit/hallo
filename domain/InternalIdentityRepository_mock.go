// Code generated by MockGen. DO NOT EDIT.
// Source: hallo/domain (interfaces: InternalIdentityRepository)

// Package domain is a generated GoMock package.
package domain

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInternalIdentityRepository is a mock of InternalIdentityRepository interface
type MockInternalIdentityRepository struct {
	ctrl     *gomock.Controller
	recorder *MockInternalIdentityRepositoryMockRecorder
}

// MockInternalIdentityRepositoryMockRecorder is the mock recorder for MockInternalIdentityRepository
type MockInternalIdentityRepositoryMockRecorder struct {
	mock *MockInternalIdentityRepository
}

// NewMockInternalIdentityRepository creates a new mock instance
func NewMockInternalIdentityRepository(ctrl *gomock.Controller) *MockInternalIdentityRepository {
	mock := &MockInternalIdentityRepository{ctrl: ctrl}
	mock.recorder = &MockInternalIdentityRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInternalIdentityRepository) EXPECT() *MockInternalIdentityRepositoryMockRecorder {
	return m.recorder
}

// Authenticate mocks base method
func (m *MockInternalIdentityRepository) Authenticate(arg0 uint64, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authenticate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Authenticate indicates an expected call of Authenticate
func (mr *MockInternalIdentityRepositoryMockRecorder) Authenticate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authenticate", reflect.TypeOf((*MockInternalIdentityRepository)(nil).Authenticate), arg0, arg1)
}

// Save mocks base method
func (m *MockInternalIdentityRepository) Save(arg0 uint64, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockInternalIdentityRepositoryMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockInternalIdentityRepository)(nil).Save), arg0, arg1)
}
